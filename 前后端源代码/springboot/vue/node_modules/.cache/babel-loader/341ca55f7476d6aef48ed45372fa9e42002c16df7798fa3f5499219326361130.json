{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nimport { component } from 'vue/types/umd';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/Register.vue')\n}, {\n  path: '/404',\n  name: '404',\n  component: () => import('../views/404.vue')\n}, {\n  path: '/front',\n  name: 'Front',\n  component: () => import('../views/front/Front'),\n  children: [{\n    path: 'home',\n    name: 'FrontHome',\n    component: () => import('../views/front/Home.vue')\n  }, {\n    path: 'password',\n    name: 'Password',\n    component: () => import('../views/front/Password.vue')\n  }, {\n    path: 'person',\n    name: 'Person',\n    component: () => import('../views/front/Person.vue')\n  }, {\n    path: 'leaverecords',\n    name: 'Leaverecords',\n    component: () => import('../views/front/Leaverecords.vue')\n  }, {\n    path: 'salary',\n    name: 'Salary',\n    component: () => import('../views/front/Salary.vue')\n  }]\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n});\n\n// 重置路由\nexport const resetRouter = () => {\n  router.matcher = new VueRouter({\n    mode: 'history',\n    routes\n  });\n};\n\n// 注意：刷新页面会导致页面路由重置\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n  if (storeMenus) {\n    // 拼装动态路由\n    const manageRoute = {\n      path: '/',\n      name: 'Manage',\n      component: () => import('../views/Manage.vue'),\n      redirect: \"/home\",\n      children: [{\n        path: 'person',\n        name: '个人信息',\n        component: () => import('../views/Person.vue')\n      }, {\n        path: 'password',\n        name: '修改密码',\n        component: () => import('../views/Password.vue')\n      }]\n    };\n    const menus = JSON.parse(storeMenus);\n    menus.forEach(item => {\n      if (item.path) {\n        // 当且仅当path不为空的时候才去设置路由\n        let itemMenu = {\n          path: item.path.replace(\"/\", \"\"),\n          name: item.name,\n          component: () => import('../views/' + item.pagePath + '.vue')\n        };\n        manageRoute.children.push(itemMenu);\n      } else if (item.children.length) {\n        item.children.forEach(item => {\n          if (item.path) {\n            let itemMenu = {\n              path: item.path.replace(\"/\", \"\"),\n              name: item.name,\n              component: () => import('../views/' + item.pagePath + '.vue')\n            };\n            manageRoute.children.push(itemMenu);\n          }\n        });\n      }\n    });\n\n    // 获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name);\n    if (!currentRouteNames.includes('Manage')) {\n      // 动态添加到现在的路由对象中去\n      router.addRoute(manageRoute);\n    }\n  }\n};\n\n// 每次刷新页面都要重新设置路由，否则路由就会被重置\nsetRoutes();\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name); // 设置当前的路由名称\n  store.commit(\"setPath\");\n  if (!to.matched.length) {\n    const menus = localStorage.getItem(\"menus\");\n    if (!menus) {\n      next(\"/login\");\n    } else {\n      next(\"/404\");\n      // alert('出错了')\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","component","use","routes","path","name","children","router","mode","resetRouter","matcher","setRoutes","storeMenus","localStorage","getItem","manageRoute","redirect","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","currentRouteNames","getRoutes","map","v","includes","addRoute","beforeEach","to","from","next","setItem","commit","matched"],"sources":["D:/IDEAfile/企业员工信息管理/springboot/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from \"@/store\";\r\nimport { component } from 'vue/types/umd';\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('../views/Register.vue')\r\n  },\r\n  {\r\n    path: '/404',\r\n    name: '404',\r\n    component: () => import('../views/404.vue')\r\n  },\r\n  {\r\n    path: '/front',\r\n    name: 'Front',\r\n    component: () => import('../views/front/Front'),\r\n    children: [\r\n      {\r\n        path: 'home',\r\n        name: 'FrontHome',\r\n        component: () => import('../views/front/Home.vue')\r\n      },\r\n      {\r\n        path: 'password',\r\n        name: 'Password',\r\n        component: () => import('../views/front/Password.vue')\r\n      },\r\n      {\r\n        path: 'person',\r\n        name: 'Person',\r\n        component: () => import('../views/front/Person.vue')\r\n      },\r\n      {\r\n        path: 'leaverecords',\r\n        name: 'Leaverecords',\r\n        component: () => import('../views/front/Leaverecords.vue')\r\n      },\r\n      {\r\n        path: 'salary',\r\n        name: 'Salary',\r\n        component: () => import('../views/front/Salary.vue')\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes\r\n})\r\n\r\n// 重置路由\r\nexport const resetRouter = () => {\r\n  router.matcher = new VueRouter({\r\n    mode: 'history',\r\n    routes\r\n  })\r\n}\r\n\r\n// 注意：刷新页面会导致页面路由重置\r\nexport const setRoutes = () => {\r\n  const storeMenus = localStorage.getItem(\"menus\");\r\n  if (storeMenus) {\r\n    // 拼装动态路由\r\n    const manageRoute = {\r\n      path: '/', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/home\", children: [\r\n        { path: 'person', name: '个人信息', component: () => import('../views/Person.vue') },\r\n        { path: 'password', name: '修改密码', component: () => import('../views/Password.vue') },\r\n      ]\r\n    }\r\n    const menus = JSON.parse(storeMenus)\r\n    menus.forEach(item => {\r\n      if (item.path) {  // 当且仅当path不为空的时候才去设置路由\r\n        let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue') }\r\n        manageRoute.children.push(itemMenu)\r\n      } else if (item.children.length) {\r\n        item.children.forEach(item => {\r\n          if (item.path) {\r\n            let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue') }\r\n            manageRoute.children.push(itemMenu)\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // 获取当前的路由对象名称数组\r\n    const currentRouteNames = router.getRoutes().map(v => v.name)\r\n    if (!currentRouteNames.includes('Manage')) {\r\n      // 动态添加到现在的路由对象中去\r\n      router.addRoute(manageRoute)\r\n    }\r\n  }\r\n}\r\n\r\n// 每次刷新页面都要重新设置路由，否则路由就会被重置\r\nsetRoutes()\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  localStorage.setItem(\"currentPathName\", to.name)  // 设置当前的路由名称\r\n  store.commit(\"setPath\")\r\n  if (!to.matched.length) {\r\n    const menus = localStorage.getItem(\"menus\")\r\n    if (!menus) {\r\n      next(\"/login\")\r\n    } else {\r\n      next(\"/404\")\r\n      // alert('出错了')\r\n    }\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,QAAQ,eAAe;AAEzCH,GAAG,CAACI,GAAG,CAACH,SAAS,CAAC;AAElB,MAAMI,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;AAC9C,CAAC,EACD;EACEG,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;AACjD,CAAC,EACD;EACEG,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACXJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,kBAAkB;AAC5C,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC;EAC/CK,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,WAAW;IACjBJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB;EACnD,CAAC,EACD;IACEG,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,UAAU;IAChBJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B;EACvD,CAAC,EACD;IACEG,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EACrD,CAAC,EACD;IACEG,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,cAAc;IACpBJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC;EAC3D,CAAC,EACD;IACEG,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EACrD,CAAC;AAEL,CAAC,CACF;AAED,MAAMM,MAAM,GAAG,IAAIR,SAAS,CAAC;EAC3BS,IAAI,EAAE,SAAS;EACfL;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAC/BF,MAAM,CAACG,OAAO,GAAG,IAAIX,SAAS,CAAC;IAC7BS,IAAI,EAAE,SAAS;IACfL;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAC7B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChD,IAAIF,UAAU,EAAE;IACd;IACA,MAAMG,WAAW,GAAG;MAClBX,IAAI,EAAE,GAAG;MAAEC,IAAI,EAAE,QAAQ;MAAEJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB,CAAC;MAAEe,QAAQ,EAAE,OAAO;MAAEV,QAAQ,EAAE,CACtG;QAAEF,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE,MAAM;QAAEJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB;MAAE,CAAC,EAChF;QAAEG,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAE,MAAM;QAAEJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;MAAE,CAAC;IAExF,CAAC;IACD,MAAMgB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;IACpCK,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACjB,IAAI,EAAE;QAAG;QAChB,IAAIkB,QAAQ,GAAG;UAAElB,IAAI,EAAEiB,IAAI,CAACjB,IAAI,CAACmB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;UAAElB,IAAI,EAAEgB,IAAI,CAAChB,IAAI;UAAEJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,WAAW,GAAGoB,IAAI,CAACG,QAAQ,GAAG,MAAM;QAAE,CAAC;QACnIT,WAAW,CAACT,QAAQ,CAACmB,IAAI,CAACH,QAAQ,CAAC;MACrC,CAAC,MAAM,IAAID,IAAI,CAACf,QAAQ,CAACoB,MAAM,EAAE;QAC/BL,IAAI,CAACf,QAAQ,CAACc,OAAO,CAACC,IAAI,IAAI;UAC5B,IAAIA,IAAI,CAACjB,IAAI,EAAE;YACb,IAAIkB,QAAQ,GAAG;cAAElB,IAAI,EAAEiB,IAAI,CAACjB,IAAI,CAACmB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;cAAElB,IAAI,EAAEgB,IAAI,CAAChB,IAAI;cAAEJ,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,WAAW,GAAGoB,IAAI,CAACG,QAAQ,GAAG,MAAM;YAAE,CAAC;YACnIT,WAAW,CAACT,QAAQ,CAACmB,IAAI,CAACH,QAAQ,CAAC;UACrC;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;;IAEF;IACA,MAAMK,iBAAiB,GAAGpB,MAAM,CAACqB,SAAS,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACzB,IAAI,CAAC;IAC7D,IAAI,CAACsB,iBAAiB,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACzC;MACAxB,MAAM,CAACyB,QAAQ,CAACjB,WAAW,CAAC;IAC9B;EACF;AACF,CAAC;;AAED;AACAJ,SAAS,CAAC,CAAC;AAEXJ,MAAM,CAAC0B,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCvB,YAAY,CAACwB,OAAO,CAAC,iBAAiB,EAAEH,EAAE,CAAC7B,IAAI,CAAC,EAAE;EAClDL,KAAK,CAACsC,MAAM,CAAC,SAAS,CAAC;EACvB,IAAI,CAACJ,EAAE,CAACK,OAAO,CAACb,MAAM,EAAE;IACtB,MAAMT,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACG,KAAK,EAAE;MACVmB,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,MAAM,CAAC;MACZ;IACF;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAe7B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}