{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resetRouter, setRoutes } from \"@/router\";\nimport Identify from \"@/components/Identify\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: {},\n      pass: {},\n      code: '',\n      dialogFormVisible: false,\n      // 图片验证码\n      identifyCode: '',\n      // 验证码规则\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '长度在 2 到 5 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {\n    Identify\n  },\n  mounted() {\n    // 重置路由\n    resetRouter();\n    this.refreshCode();\n  },\n  methods: {\n    login() {\n      // if (this.code !== this.identifyCode.toLowerCase()) {\n      //   this.$message({\n      //     type: \"error\",\n      //     message: \"验证码错误\"\n      //   })\n      //   return;\n      // }\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          // 表单校验合法\n          this.request.post(\"/user/login\", this.user).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"user\", JSON.stringify(res.data)); // 存储用户信息到浏览器\n              localStorage.setItem(\"menus\", JSON.stringify(res.data.menus)); // 存储用户信息到浏览器\n\n              // 动态设置当前用户的路由\n              setRoutes();\n              this.$router.push(\"/\");\n              this.$message.success(\"登录成功\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)];\n      }\n    },\n    handlePass() {\n      this.dialogFormVisible = true;\n      this.pass = {};\n    },\n    passwordBack() {\n      this.request.put(\"/user/reset\", this.pass).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"重置密码成功，新密码为：123，请尽快修改密码\");\n          this.dialogFormVisible = false;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["resetRouter","setRoutes","Identify","name","data","user","pass","code","dialogFormVisible","identifyCode","identifyCodes","rules","username","required","message","trigger","min","max","password","components","mounted","refreshCode","methods","login","$refs","validate","valid","request","post","then","res","localStorage","setItem","JSON","stringify","menus","$router","push","$message","success","error","msg","makeCode","o","l","i","Math","floor","random","length","handlePass","passwordBack","put"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <!--    <div style=\"margin: 20px 0; color: dodgerblue; text-align: center; font-size: 30px\">企业员工管理系统</div>-->\r\n    <!--    <div style=\"margin: 150px auto; background-color: #fff; width: 350px; height: 300px; padding: 20px; border-radius: 10px\">-->\r\n    <!--      <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>登 录</b></div>-->\r\n    <!--      <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\">-->\r\n    <!--        <el-form-item prop=\"username\">-->\r\n    <!--          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>-->\r\n    <!--        </el-form-item>-->\r\n    <!--        <el-form-item prop=\"password\">-->\r\n    <!--          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"user.password\"></el-input>-->\r\n    <!--        </el-form-item>-->\r\n    <!--&lt;!&ndash;        <el-form-item>&ndash;&gt;-->\r\n    <!--&lt;!&ndash;          <div style=\"display: flex\">&ndash;&gt;-->\r\n    <!--&lt;!&ndash;            <el-input size=\"mid\" v-model=\"code\" style=\"width: 200px\"></el-input>&ndash;&gt;-->\r\n    <!--&lt;!&ndash;            <span @click=\"refreshCode\" style=\"cursor: pointer; flex: 1;\">&ndash;&gt;-->\r\n    <!--&lt;!&ndash;              <Identify :identifyCode=\"identifyCode\"></Identify>&ndash;&gt;-->\r\n    <!--&lt;!&ndash;           </span>&ndash;&gt;-->\r\n    <!--&lt;!&ndash;          </div>&ndash;&gt;-->\r\n    <!--&lt;!&ndash;        </el-form-item>&ndash;&gt;-->\r\n\r\n    <!--        <el-form-item style=\"margin: 10px 0; text-align: right\">-->\r\n    <!--          <el-button type=\"warning\" size=\"small\"  autocomplete=\"off\" @click=\"$router.push('/register')\">前往注册</el-button>-->\r\n    <!--          <el-button type=\"primary\" size=\"small\"  autocomplete=\"off\" @click=\"login\">登录</el-button>-->\r\n\r\n    <!--        </el-form-item>-->\r\n    <!--        <el-form-item style=\"margin: 10px 0; text-align: right\">-->\r\n    <!--          <el-button type=\"text\" size=\"mid\"  autocomplete=\"off\" @click=\"handlePass\">找回密码</el-button>-->\r\n    <!--        </el-form-item>-->\r\n    <!--      </el-form>-->\r\n    <!--    </div>-->\r\n\r\n    <div style=\"margin: 200px auto;  width: 360px; height: 320px;\">\r\n      <div style=\"margin: 20px 0; color: dodgerblue; text-align: center; font-size: 30px\"><b>企业后台管理系统</b></div>\r\n      <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\" style=\"padding: 0 20px\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"user.password\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: dodgerblue; border: 1px solid dodgerblue; color: white\"\r\n            size=\"medium\" @click=\"login\">登录</el-button>\r\n\r\n        </el-form-item>\r\n        <el-form-item style=\"margin: 10px 0;\">\r\n          <el-button style=\"color: orange;\" size=\"medium\" type=\"text\"\r\n            @click=\"$router.push('/register')\">立即注册</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n\r\n\r\n    <el-dialog title=\"找回密码\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\r\n      <el-form label-width=\"100px\" size=\"small\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"pass.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\">\r\n          <el-input v-model=\"pass.phone\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"passwordBack\">重置密码</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { resetRouter, setRoutes } from \"@/router\";\r\nimport Identify from \"@/components/Identify\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      user: {},\r\n      pass: {},\r\n      code: '',\r\n      dialogFormVisible: false,\r\n      // 图片验证码\r\n      identifyCode: '',\r\n      // 验证码规则\r\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 1, max: 10, message: '长度在 2 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  components: { Identify },\r\n  mounted() {\r\n    // 重置路由\r\n    resetRouter()\r\n    this.refreshCode()\r\n  },\r\n  methods: {\r\n    login() {\r\n      // if (this.code !== this.identifyCode.toLowerCase()) {\r\n      //   this.$message({\r\n      //     type: \"error\",\r\n      //     message: \"验证码错误\"\r\n      //   })\r\n      //   return;\r\n      // }\r\n      this.$refs['userForm'].validate((valid) => {\r\n        if (valid) {  // 表单校验合法\r\n          this.request.post(\"/user/login\", this.user).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"user\", JSON.stringify(res.data))  // 存储用户信息到浏览器\r\n              localStorage.setItem(\"menus\", JSON.stringify(res.data.menus))  // 存储用户信息到浏览器\r\n\r\n              // 动态设置当前用户的路由\r\n              setRoutes()\r\n              this.$router.push(\"/\")\r\n              this.$message.success(\"登录成功\")\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    // 切换验证码\r\n    refreshCode() {\r\n      this.identifyCode = ''\r\n      this.makeCode(this.identifyCodes, 4)\r\n    },\r\n    // 生成随机验证码\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * (this.identifyCodes.length))]\r\n      }\r\n    },\r\n    handlePass() {\r\n      this.dialogFormVisible = true\r\n      this.pass = {}\r\n    },\r\n    passwordBack() {\r\n      this.request.put(\"/user/reset\", this.pass).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"重置密码成功，新密码为：123，请尽快修改密码\")\r\n          this.dialogFormVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  height: 100vh;\r\n  /*background-image: url(\"../assets/bg.jpg\");*/\r\n  background-size: cover;\r\n  background-color: rgb(102, 177, 255);\r\n  background: linear-gradient(137deg, #afd9f7, #f0f2ff);\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":";AA2EA,SAAAA,WAAA,EAAAC,SAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,iBAAA;MACA;MACAC,YAAA;MACA;MACAC,aAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,QAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,UAAA;IAAAjB;EAAA;EACAkB,QAAA;IACA;IACApB,WAAA;IACA,KAAAqB,WAAA;EACA;EACAC,OAAA;IACAC,MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA,qBAAAvB,IAAA,EAAAwB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAvB,IAAA;cACAwB,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAA1B,IAAA;cACA2B,YAAA,CAAAC,OAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAA1B,IAAA,CAAA+B,KAAA;;cAEA;cACAlC,SAAA;cACA,KAAAmC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACApB,YAAA;MACA,KAAAZ,YAAA;MACA,KAAAiC,QAAA,MAAAhC,aAAA;IACA;IACA;IACAgC,SAAAC,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA,KAAApC,YAAA,SAAAC,aAAA,CAAAoC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAtC,aAAA,CAAAuC,MAAA;MACA;IACA;IACAC,WAAA;MACA,KAAA1C,iBAAA;MACA,KAAAF,IAAA;IACA;IACA6C,aAAA;MACA,KAAAxB,OAAA,CAAAyB,GAAA,qBAAA9C,IAAA,EAAAuB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAvB,IAAA;UACA,KAAA+B,QAAA,CAAAC,OAAA;UACA,KAAA/B,iBAAA;QACA;UACA,KAAA8B,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}